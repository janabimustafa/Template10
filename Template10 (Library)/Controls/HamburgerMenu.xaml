<UserControl x:Class="Template10.Controls.HamburgerMenu"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Core="using:Microsoft.Xaml.Interactions.Core"             
             xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="using:Template10.Controls"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             x:Name="ThisPage" d:DesignHeight="400"
             d:DesignWidth="400" mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Default">
                    <SolidColorBrush x:Key="HamburgerBackground" Color="#FFD13438" />
                    <SolidColorBrush x:Key="HamburgerForeground" Color="White" />
                    <SolidColorBrush x:Key="NavAreaBackground" Color="#FF2B2B2B" />
                    <SolidColorBrush x:Key="SecondarySeparator" Color="Gray" />
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>
            <Style x:Key="HamburgerButtonStyle" TargetType="Button">
                <Setter Property="Height" Value="48" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="RootGrid" Background="{Binding Source={ThemeResource HamburgerBackground}, Mode=OneWay, FallbackValue=#FFD13438}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="HoverOverlay.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="PressedOverlay.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle x:Name="PressedOverlay" Fill="White"
                                           Opacity=".2" Visibility="Collapsed" />
                                <Rectangle x:Name="HoverOverlay" Fill="White"
                                           Opacity=".1" Visibility="Collapsed" />
                                <FontIcon x:Name="ContentPresenter" FontSize="20"
                                          Foreground="{Binding Source={ThemeResource HamburgerForeground}, FallbackValue=White}"
                                          Glyph="&#xE700;" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="UseSystemFocusVisuals" Value="True" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Width" Value="48" />
            </Style>
        </ResourceDictionary>
        <!--  defaults  -->
        <!--<SolidColorBrush x:Key="HamburgerBackground" Color="#FFD13438" />
        <SolidColorBrush x:Key="HamburgerForeground" Color="White" />
        <SolidColorBrush x:Key="NavButtonBackground" Color="#FFD13438" />
        <SolidColorBrush x:Key="NavButtonForeground" Color="White" />
        <SolidColorBrush x:Key="NavAreaBackground" Color="White" />
        <SolidColorBrush x:Key="SecondaryBorder" Color="DimGray" />
        <SolidColorBrush x:Key="NavButtonCheckedOverlayBackground" Color="#FF7D1F22" />
        <SolidColorBrush x:Key="NavButtonHoverOverlayBackground" Color="#FF434343" />-->
    </UserControl.Resources>
    <Grid x:Name="RootGrid">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0" To="VisualStateWide">
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.6" Storyboard.TargetName="HamburgerButton"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)"
                                             To="-48" d:IsOptimized="True">
                                <DoubleAnimation.EasingFunction>
                                    <BackEase EasingMode="EaseIn" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="VisualStateNarrowTrigger" MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ShellSplitView.DisplayMode" Value="Overlay" />
                        <Setter Target="ShellSplitView.IsPaneOpen" Value="False" />
                        <Setter Target="HamburgerButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="VisualStateNormalTrigger" MinWindowWidth="521" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ShellSplitView.DisplayMode" Value="CompactOverlay" />
                        <Setter Target="ShellSplitView.IsPaneOpen" Value="False" />
                        <Setter Target="HamburgerButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="VisualStateWideTrigger" MinWindowWidth="-1" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ShellSplitView.DisplayMode" Value="CompactInline" />
                        <Setter Target="HamburgerButton.Visibility" Value="Collapsed" />
                        <Setter Target="ShellSplitView.IsPaneOpen" Value="True" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <ContentControl Height="48" Margin="48,0,0,0"
                        VerticalAlignment="Top" HorizontalContentAlignment="Stretch"
                        Content="{Binding HeaderContent, ElementName=ThisPage}">
            <Interactivity:Interaction.Behaviors>
                <Core:DataTriggerBehavior Binding="{Binding Visibility, ElementName=HamburgerButton}" Value="Visible">
                    <Core:ChangePropertyAction PropertyName="Margin" TargetObject="{Binding ElementName=PaneContent}">
                        <Core:ChangePropertyAction.Value>
                            <Thickness>48,0,0,0</Thickness>
                        </Core:ChangePropertyAction.Value>
                    </Core:ChangePropertyAction>
                </Core:DataTriggerBehavior>
                <Core:DataTriggerBehavior Binding="{Binding Visibility, ElementName=HamburgerButton, Mode=OneWay}" Value="Collapsed">
                    <Core:ChangePropertyAction PropertyName="Margin" TargetObject="{Binding ElementName=PaneContent}" />
                </Core:DataTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </ContentControl>
        <SplitView x:Name="ShellSplitView" Grid.Column="0"
                   DisplayMode="Inline" OpenPaneLength="220"
                   PaneBackground="Transparent">
            <SplitView.Pane>
                <Grid x:Name="PaneContent" Margin="0,48,0,0"
                      Background="{Binding Source={ThemeResource NavAreaBackground}, FallbackValue=#FF2B2B2B}"
                      BorderBrush="{Binding Source={ThemeResource SecondarySeparator}, FallbackValue=Gray}"
                      BorderThickness="0,0,1,0" Tapped="PaneContent_Tapped">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Interactivity:Interaction.Behaviors>
                        <Core:DataTriggerBehavior Binding="{Binding Visibility, ElementName=HamburgerButton, Mode=OneWay}" Value="Visible">
                            <Core:ChangePropertyAction PropertyName="Margin" TargetObject="{Binding ElementName=PaneContent}">
                                <Core:ChangePropertyAction.Value>
                                    <Thickness>0,48,0,0</Thickness>
                                </Core:ChangePropertyAction.Value>
                            </Core:ChangePropertyAction>
                        </Core:DataTriggerBehavior>
                        <Core:DataTriggerBehavior Binding="{Binding Visibility, ElementName=HamburgerButton, Mode=OneWay}" Value="Collapsed">
                            <Core:ChangePropertyAction PropertyName="Margin" TargetObject="{Binding ElementName=PaneContent}">
                                <Core:ChangePropertyAction.Value>
                                    <Thickness>0,0,0,0</Thickness>
                                </Core:ChangePropertyAction.Value>
                            </Core:ChangePropertyAction>
                        </Core:DataTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>
                    <ScrollViewer Grid.Row="0" VerticalScrollBarVisibility="Auto">
                        <ItemsControl ItemsSource="{Binding PrimaryButtons, ElementName=ThisPage}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <!--Design Data-->
                            <local:SplitViewButton>
                                <StackPanel Orientation="Horizontal">
                                    <SymbolIcon Width="48" Height="48" Symbol="Back" />
                                    <TextBlock Margin="12,0,0,0" VerticalAlignment="Center" Text="Left" />
                                </StackPanel>
                            </local:SplitViewButton>
                            <local:SplitViewButton>
                                <StackPanel Orientation="Horizontal">
                                    <SymbolIcon Width="48" Height="48" Symbol="Up" />
                                    <TextBlock Margin="12,0,0,0" VerticalAlignment="Center" Text="Top" />
                                </StackPanel>
                            </local:SplitViewButton>
                            <local:SplitViewButton>
                                <StackPanel Orientation="Horizontal">
                                    <SymbolIcon Width="48" Height="48" Symbol="Forward" />
                                    <TextBlock Margin="12,0,0,0" VerticalAlignment="Center" Text="Right" />
                                </StackPanel>
                            </local:SplitViewButton>
                            <local:SplitViewButton>
                                <StackPanel Orientation="Horizontal">
                                    <SymbolIcon Width="48" Height="48" Symbol="Download" />
                                    <TextBlock Margin="12,0,0,0" VerticalAlignment="Center" Text="Bottom" />
                                </StackPanel>
                            </local:SplitViewButton>
                        </ItemsControl>
                    </ScrollViewer>
                    <ItemsControl Grid.Row="1" ItemsSource="{Binding SecondaryButtons, ElementName=ThisPage}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel BorderBrush="{Binding Source={ThemeResource SecondarySeparator}, FallbackValue=Gray}" BorderThickness="0,1,0,0" Loaded="SecondaryButtonStackPanel_Loaded" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <!--  designtime  -->
                        <!--<local:HamburgerButtonInfo>
                            <StackPanel Orientation="Horizontal">
                                <SymbolIcon Width="48" Height="48" Symbol="Setting" />
                                <TextBlock Margin="12,0,0,0" VerticalAlignment="Center" Text="Settings" />
                            </StackPanel>
                        </local:HamburgerButtonInfo>-->
                    </ItemsControl>
                </Grid>
            </SplitView.Pane>
        </SplitView>
        <Button x:Name="HamburgerButton" Grid.Row="0"
                Command="{x:Bind HamburgerCommand}" RenderTransformOrigin="0.5,0.5"
                Style="{StaticResource HamburgerButtonStyle}">
            <Button.RenderTransform>
                <CompositeTransform />
            </Button.RenderTransform>
            <StackPanel Orientation="Horizontal">
                <FontIcon FontSize="20" Glyph="&#xE700;" />
            </StackPanel>
        </Button>
    </Grid>
</UserControl>
